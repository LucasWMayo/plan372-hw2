---
title: "PLAN 372 HW 2"
author: "Lucas Mayo"
format: pdf
editor: visual
---

```{r}
library(tidyverse)
library(lubridate)

```

Load the data from CSV.

```{r}
data <- read_csv("C:/Users/lucas/Documents/plan372/plan372-hw2/restaurant_inspections.csv")

head(data)
```

Used the head(data) like we commonly do in class in order to ensure that it was loaded correctly.

Question 1. Visualizing distribution of inspection scores

```{r}
ggplot(restaurant_inspections, aes(x= SCORE)) +
  geom_histogram(bins = 100)
```

Here I attempted to utilize what we did in class with line plots and apply it to a histogram. The data mentioned that I should use a better value, as it was originally using 'bins = 30' so I changed it to 100.

Question 2. Older and Newer Restaurant Inspection Scores

```{r}
data$RESTAURANTOPENDATE <- ymd_hms(data$RESTAURANTOPENDATE)
data$age <- as.numeric(difftime(Sys.Date(), data$RESTAURANTOPENDATE, units = "days")) /365
```

Here I first attempted to convert the date, but ran into issues using only ymd. I hate to look at the results produced earlier in the head(data) command, to realize that it was most likely the lack of inclusion of hour and minutes that were giving me error messages.

```{r}
ggplot(data, aes(x = age, y = SCORE)) +
  geom_point() 
```

Here I used geom_point to create a scatter plot, as while scrolling the geom\_ commands it seemed to be the best reflection. There does seem to be a very slight trend, because the newer restaurants have a few scores that dip closer to the 80 range, while the older restaurants do not, but it does seem very slight at best.

Question 3. Varying Inspection Score

```{r}
different_cities <- unique(data$CITY)
print(different_cities)
```

I attempted to move on to question 3, before realizing that I did not know all the different city names and variations used in the data.

```{r}
data$CITY <- str_to_upper(data$CITY)
data$CITY <- recode(data$CITY, "FUQUAY VARINA" = "FUQUAY-VARINA",
                    "WAKE FOREST" = "WAKE FOREST",
                    "MORRISVILE" = "MORRISVILLE",
                    "HOLLY SPRING" = "HOLLY SPRINGS",
                    "RESEARCH TRIANGLE PARK" = "RTP",
                    "CARY" = "CARY",
                    "RALEIGH" = "RALEIGH",
                    "KNIGHTDALE" = "KNIGHTDALE",
                    "CLAYTON" = "CLAYTON",
                    "GARNER" = "GARNER",
                    "MORRISVILLE" = "MORRISVILLE",
                    "WENDELL" = "WENDELL",
                    "APEX" = "APEX",
                    "WILLOW SPRING" = "WILLOW SPRING",
                    "ROLESVILLE" = "ROLESVILLE",
                    "ZEBULON" = "ZEBULON",
                    "NEW HILL" = "NEW HILL",
                    "ANGIER" = "ANGIER")
```

I made an effort to recode like we did the SFpark exercise here.

```{r}
city_scores <- data |>
  group_by(CITY) |>
  summarize(avg_score = mean(SCORE, na.rm = TRUE)) |>
  ungroup()

```

Using the above I attempted to ensure that NA values would be ignored.
